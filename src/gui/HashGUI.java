/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import emailsearch.SearchCoord;
import hashsorting.HashCoord;
import java.io.File;
import java.io.IOException;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.time.Duration;
import java.time.Instant;
import java.util.Arrays;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
/**
 *
 * @author ryan
 */
public class HashGUI extends javax.swing.JFrame
{

    private SearchCoord searchCoord;
    private HashCoord hashCoord;
    private Path filePath;
    /**
     * Creates new form HashGUI
     */
    public HashGUI()
    {
        
        super("LinkedIn Hash File Extracter");
        initComponents();
        hashCoord = new HashCoord();
        searchCoord = new SearchCoord();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InputTab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        splitfileButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        splitfileTextArea = new javax.swing.JTextArea();
        splitfileField = new java.awt.TextField();
        hashCountField = new java.awt.TextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        hashFileField = new java.awt.TextField();
        startButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        extractOutputField = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileLoadedField = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        loadFileButton = new javax.swing.JButton();
        displayFilenamebox = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        emailSearchFileLoader = new javax.swing.JButton();
        searchFilenameBox = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        searchResultsBox = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        emailAddressLabel = new javax.swing.JLabel();
        emailAdressLoaderButton = new javax.swing.JButton();
        emailAddressTextbox = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        InputTab.setName("Input"); // NOI18N

        jLabel4.setText("File to process: ");

        splitfileButton.setText("start");
        splitfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                splitfileButtonActionPerformed(evt);
            }
        });

        splitfileTextArea.setEditable(false);
        splitfileTextArea.setColumns(20);
        splitfileTextArea.setRows(5);
        splitfileTextArea.setText("Default Hash Count is 1,000,000");
        splitfileTextArea.setToolTipText("");
        jScrollPane3.setViewportView(splitfileTextArea);

        splitfileField.setEditable(false);
        splitfileField.setName(""); // NOI18N

        hashCountField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        hashCountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hashCountFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Hash count per File:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(splitfileField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(splitfileButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(hashCountField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(602, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(splitfileField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(hashCountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(splitfileButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(311, Short.MAX_VALUE))
        );

        hashCountField.getAccessibleContext().setAccessibleDescription("");

        InputTab.addTab("Split Files", jPanel1);

        jLabel3.setText("File to process : ");

        hashFileField.setEditable(false);
        hashFileField.setName(""); // NOI18N

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        extractOutputField.setEditable(false);
        extractOutputField.setColumns(20);
        extractOutputField.setRows(5);
        jScrollPane2.setViewportView(extractOutputField);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(startButton, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(171, 171, 171)))
                    .addComponent(hashFileField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(764, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addComponent(hashFileField, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addGap(91, 91, 91)
                .addComponent(startButton)
                .addGap(52, 52, 52)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(271, Short.MAX_VALUE))
        );

        InputTab.addTab("Extract Hashes", jPanel3);

        jLabel1.setText("Please select the hash file to load: ");

        fileLoadedField.setEditable(false);
        fileLoadedField.setColumns(20);
        fileLoadedField.setRows(5);
        jScrollPane1.setViewportView(fileLoadedField);

        jLabel2.setText("File loaded");

        loadFileButton.setText("Load File");
        loadFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFileButtonActionPerformed(evt);
            }
        });

        displayFilenamebox.setToolTipText("displays loaded file");
        displayFilenamebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayFilenameboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(loadFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(displayFilenamebox))))
                .addContainerGap(606, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadFileButton)
                .addGap(30, 30, 30)
                .addComponent(displayFilenamebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(306, 306, 306)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        InputTab.addTab("Load Files", jPanel2);

        jLabel6.setText("Select email List to Load:");

        emailSearchFileLoader.setText("Load File");
        emailSearchFileLoader.setFocusTraversalPolicyProvider(true);
        emailSearchFileLoader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailSearchFileLoaderActionPerformed(evt);
            }
        });

        searchFilenameBox.setToolTipText("displays loaded file");

        searchResultsBox.setColumns(20);
        searchResultsBox.setRows(5);
        jScrollPane4.setViewportView(searchResultsBox);

        jLabel7.setText("Search Results:");

        emailAddressLabel.setText("Email Address you are searching for:");

        emailAdressLoaderButton.setText("Load Email Address");
        emailAdressLoaderButton.setToolTipText("");
        emailAdressLoaderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailAdressLoaderButtonActionPerformed(evt);
            }
        });

        emailAddressTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailAddressTextboxActionPerformed(evt);
            }
        });

        searchButton.setText("Begin Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchButton)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(emailAdressLoaderButton)
                        .addComponent(emailAddressLabel)
                        .addComponent(jLabel7)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                        .addComponent(emailSearchFileLoader)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchFilenameBox)
                        .addComponent(emailAddressTextbox)))
                .addContainerGap(624, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailSearchFileLoader)
                .addGap(18, 18, 18)
                .addComponent(searchFilenameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(emailAddressLabel)
                .addGap(18, 18, 18)
                .addComponent(emailAddressTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(emailAdressLoaderButton)
                .addGap(18, 18, 18)
                .addComponent(searchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
        );

        InputTab.addTab("Email Search", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(InputTab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InputTab)
                .addContainerGap())
        );

        InputTab.getAccessibleContext().setAccessibleName("welcome");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 
     * @param evt 
     */
    private void loadFileButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_loadFileButtonActionPerformed
    {//GEN-HEADEREND:event_loadFileButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setSize(500, 300);
        int returnVal = fc.showOpenDialog(this);
        
        
        // if user presses ok , load the file
        if(returnVal == JFileChooser.APPROVE_OPTION)
        {
            filePath = fc.getSelectedFile().toPath();
            //load the filePath
            hashCoord.setHashFile(filePath);
            System.out.println(filePath.toString());
        }
        try
        {
            String fileSize = Double.toString(Files.size(filePath) / Math.pow(2, 20)).substring(0, 6);
            fileLoadedField.setText(filePath.getFileName().toString() + "   " + fileSize + "MB");
            hashFileField.setText(filePath.getFileName().toString() + "   " + fileSize + "MB");
            splitfileField.setText(filePath.getFileName().toString() + "   " + fileSize + "MB");
        } catch (IOException e)
        {
            extractOutputField.setText("Error: " + e.getMessage());
        }

        
    }//GEN-LAST:event_loadFileButtonActionPerformed

    /**
     * 
     * @param evt 
     */
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_startButtonActionPerformed
    {//GEN-HEADEREND:event_startButtonActionPerformed
        extractOutputField.setText("Loading file: " + filePath.getFileName().toString());
        
        
        
        Instant start = Instant.now();
        try
        {
            hashCoord.newSeperater();
        } 
        catch (FileAlreadyExistsException f )
        {
            extractOutputField.setText("Directory already exists : ........ \n" );
        }
        catch (IOException e)
        {
            extractOutputField.setText("Error : ........ \n"
                                + e.getMessage());
        } 
        
        hashCoord.seperateHashes();
        Instant end = Instant.now();
        
        extractOutputField.setText("Hash Extraction complete : . . . .\n " 
                + " HashFile : "+ filePath.getFileName().toString() 
                + " contains " + hashCoord.getHashCount() + " Hashes \n"
                + "\n" + "Time elapsed : " + Duration.between(start,end));
    }//GEN-LAST:event_startButtonActionPerformed

    private void splitfileButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_splitfileButtonActionPerformed
    {//GEN-HEADEREND:event_splitfileButtonActionPerformed
        
        hashCoord.newSplitter();
        try
        {
            hashCoord.setHashesPerFile(Long.parseLong(hashCountField.getText()));
        } catch (Exception e)
        {
            splitfileTextArea.setText("A number needs to be entered for hash count..!");
        }

        hashCoord.SplitFile();

        // Displaying the New Files
        for( File file : hashCoord.getDir().listFiles())
        {
            splitfileTextArea.setText(splitfileTextArea.getText() + "\n" + file.getName());
        }    
        
    }//GEN-LAST:event_splitfileButtonActionPerformed

    private void hashCountFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_hashCountFieldActionPerformed
    {//GEN-HEADEREND:event_hashCountFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hashCountFieldActionPerformed

    private void emailSearchFileLoaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailSearchFileLoaderActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setSize(500, 300);
        int returnVal = fc.showOpenDialog(this);
        
        
        // if user presses ok , load the file
        if(returnVal == JFileChooser.APPROVE_OPTION)
        {
            filePath = fc.getSelectedFile().toPath();
            //load the filePath
            searchCoord.setEmailFile(filePath);
            
            System.out.println(filePath.toString());
        }
        try
        {
            String fileSize = Double.toString(Files.size(filePath) / Math.pow(2, 20)).substring(0, 6);
            searchFilenameBox.setText(filePath.getFileName().toString() + "   " + fileSize + "MB");
            
        } catch (IOException e)
        {
            searchResultsBox.setText("Error: " + e.getMessage());
        }

    }//GEN-LAST:event_emailSearchFileLoaderActionPerformed

    private void displayFilenameboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayFilenameboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayFilenameboxActionPerformed

    private void emailAdressLoaderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailAdressLoaderButtonActionPerformed
        
        String emailAddress = emailAddressTextbox.getText();
        // check is not empty
        if(emailAddress.isEmpty()){
            searchResultsBox.setText("Please Enter a valid email Address!");
        }
        if(validateEmail(emailAddressTextbox.getText())){
            searchCoord.setEmailAddress(emailAddress);
            
        }else{
            searchResultsBox.setText("Please Enter a valid email Address!");
        }
        
        
    }//GEN-LAST:event_emailAdressLoaderButtonActionPerformed

    private void emailAddressTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailAddressTextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailAddressTextboxActionPerformed

    // Beging the search
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        //time the search
        Instant start = Instant.now();
        
        boolean result = searchCoord.beginEmailSearch();
        
        Instant end = Instant.now();
        emailAddressTextbox.getText();
        searchResultsBox.setText("Search Complete : . . . .\n " 
                + " email Address : "+ emailAddressTextbox.getText() 
                + " was found:" + result + "  \n"
                + "\n" + "Time elapsed : " + Duration.between(start,end));
        
    }//GEN-LAST:event_searchButtonActionPerformed

    /**
     * Regex Expression from http://howtodoinjava.com/regex/java-regex-validate-email-address/
     * 
     * @param emailAddress
     * @return 
     */
    private boolean validateEmail(String emailAddress){
        
        String regex = "^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$";
 
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(emailAddress);
        
        return matcher.matches();
        
    }
 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(HashGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() ->
        {
            new HashGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane InputTab;
    private javax.swing.JTextField displayFilenamebox;
    private javax.swing.JLabel emailAddressLabel;
    private javax.swing.JTextField emailAddressTextbox;
    private javax.swing.JButton emailAdressLoaderButton;
    private javax.swing.JButton emailSearchFileLoader;
    private javax.swing.JTextArea extractOutputField;
    private javax.swing.JTextArea fileLoadedField;
    private java.awt.TextField hashCountField;
    private java.awt.TextField hashFileField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton loadFileButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchFilenameBox;
    private javax.swing.JTextArea searchResultsBox;
    private javax.swing.JButton splitfileButton;
    private java.awt.TextField splitfileField;
    private javax.swing.JTextArea splitfileTextArea;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
